#include <iostream>
using namespace std;

// Yfirl√Ωsi f√∂llum h√©r (segi a√∞ √æau s√©u til)
// Skilgreini (√∫tf√¶ri) f√∂llin fyrir ne√∞an main
int sum(int a, int b, int c);
int max(int a, int b, int c);
int min(int a, int b, int c);
double avg(int a, int b, int c);


int main(){
     /* ==================
        S√Ωnid√¶mi 1
        Skrifi√∞ forrit sem tekur inn eina t√∂lu og prentar √∫t "sk√°kbor√∞" √≠ √æeirri st√¶r√∞ sem talan segir
        til um, √æ.e. prenta til skiptis ‚ÄôX‚Äô og bil, og byrja til skiptis hverja l√≠nu √° ‚ÄôX‚Äô e√∞a bili. Fyrsti reitur
        sem √æi√∞ prenti√∞ √∫t √° a√∞ vera X.
        ================== */
     
     int chessBoardHeight;
     cin >> chessBoardHeight;

     for(int i = 0; i < chessBoardHeight; i++)
     {
          if(i % 2 != 0)
          {
               cout << " ";
               // √âg vill a√∞ √∂nnur hver l√≠na s√© einum staf styttri
               // af √æv√≠ a√∞ √©g prenta √∫t bil fyrst (athuga j < chessBoardHeight - 1)
               for(int j = 0; j < chessBoardHeight - 1; j++)
               {
                    if(j % 2 == 0)
                    {
                         // Prenta √∫t X anna√∞ hvert skipti
                         cout << "X";
                    }
                    else
                    {
                         cout << " ";
                    }
               }
          }
          else
          {
               for(int j = 0; j < chessBoardHeight; j++)
               {
                    if(j % 2 == 0)
                    {
                         // Prenta √∫t X anna√∞ hvert skipti
                         cout << "X";
                    }
                    else
                    {
                         cout << " ";
                    }
               }
          }
          // Passa a√∞ gera n√Ωja l√≠nu √æegar r√©ttur fj√∂ldi t√°kna er kominn
          cout << endl;
     }



     /* ==================
        D√¶mi 1
        Skrifi√∞ forrit sem tekur inn eina t√∂lu og prentar √∫t p√Ωram√≠da √≠ √æeirri h√¶√∞ sem talan segir til um.
        ================== */

     int pyramidHeight;
     cin >> pyramidHeight;

     int spaces = pyramidHeight - 1; // Veit a√∞ fj√∂ldi bila er fyrst n - 1 og l√¶kka s√≠√∞an um 1 √≠ hverrri l√≠nu
     int exes = 1; // Veit a√∞ fj√∂ldi X-a er fyrst 1, h√¶kkar s√≠√∞an um 2 √≠ hverri l√≠nu
     for(int row = 0; row < pyramidHeight; row++)
     {
          for(int i = 0; i < spaces; i++)
          {
               // Prenta √∫t r√©ttan fj√∂lda bila
               cout << " ";
          }

          for(int i = 0; i < exes; i++)
          {
               // Prenta √∫t r√©ttan fj√∂lda af X
               cout << "X";
          }

          // B√¶ti vi√∞ n√Ωrri l√≠nu
          cout << endl;

          // Passa mig √° a√∞ stilla fj√∂lda bila og X-a fyrir n√¶stu √≠trun
          spaces--; // l√¶kka spaces um 1
          exes += 2; // h√¶kka exes um 2

     }




     /* ==================
        S√Ωnid√¶mi 2
        B√∫i√∞ til forrit sem hefur eftirfarandi eiginleika
        - Les inn √ærj√°r heilt√∂lur fr√° notenda
        - Fall sem tekur inn √ærj√°r heilt√∂lur og skilar summu √æeirra
        - Fall sem tekur inn √ærj√°r heilt√∂lur og skilar h√¶stu t√∂lunni
        - Forriti√∞ √° a√∞ nota f√É∂llin til a√∞ reikna summu talnanna og finna h√¶sta gildi√∞
        ================== */
     int num1, num2, num3;
     cin >> num1 >> num2 >> num3;

     cout << num1 << " + " << num2 << " + " << num3 << " = " << sum(num1, num2, num3) << endl;
     cout << max(num1, num2, num3) << " is the largest number" << endl;

     /* ==================
        D√¶mi 2
        B√∫i√∞ til forrit sem hefur eftirfarandi eiginleika
        - Les inn √ærj√°r heilt√∂lur fr√° notenda
        - Fall sem tekur inn √ærj√°r heilt√∂lur og skilar me√∞altali √æeirra
        - Fall sem tekur inn √ærj√°r heilt√∂lur og skilar minnstu t√∂lunni
        - Forriti√∞ √° a√∞ nota f√É∂llin til a√∞ reikna me√∞altal talnanna og finna l√¶gsta gildi√∞
        ================== */

     cout << "The average of " << num1 << "," << num2 << "," << num3 << " is " << avg(num1, num2, num3) << endl;
     cout << min(num1, num2, num3) << " is the smallest number" << endl;
     return 0;
}

int sum(int a, int b, int c)
{
     return a + b + c;
}

int max(int a, int b, int c)
{
     if(a >= b && a >= c)
     {
          return a;
     }
     else if(b >= c) // Veit a√∞ a < b (sj√° s√≠√∞asta skilyr√∞i √≠ if), √æarf bara a√∞ athuga hvort b >= c
     {
          return b;
     }
     else
     {
          return c;
     }
}

int min(int a, int b, int c)
{
     if(a <= b && a <= c)
     {
          return a;
     }
     else if(b <= c) // Veit a√∞ b < a (sj√° s√≠√∞asta skilyr√∞i √≠ if), √æarf bara a√∞ athuga hvort b <= c
     {
          return b;
     }
     else
     {
          return c;
     }
}

double avg(int a, int b, int c)
{
     return sum(a, b, c) / 3.0; // Athuga: √ûarf a√∞ nota 3.0 til a√∞ f√° aukastafi!
}
